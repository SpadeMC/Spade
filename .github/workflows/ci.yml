name: Continuous Integration
on: pull_request
jobs:
  compile:
    name: Compile source code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Prepare submodules
        run: git submodule init && git submodule update
      - uses: actions/cache@v1
        id: cache-stack
        with:
          path: ~/.stack/
          key: ${{ runner.os }}-stack
      - uses: actions/setup-haskell@v1
        if: steps.cache-stack.outputs.cache-hit != 'true'
      - name: Install Alex and Happy
        if: steps.cache-stack.outputs.cache-hit != 'true'
        run: stack install alex happy
      - name: Run make
        run: |
          export PATH=$PATH:~/.local/bin
          make -B
        id: make
  lint:
    name: Run linter
    runs-on: ubuntu-latest
    needs: [compile]
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive
      - uses: actions/cache@v1
        id: cache-stack
        with:
          path: ~/.stack/
          key: ${{ runner.os }}-stack
      - uses: actions/setup-haskell@v1
        if: steps.cache-stack.outputs.cache-hit != 'true'
      - name: Install Hlint
        if: steps.cache-stack.outputs.cache-hit != 'true'
        run: stack install hlint
      - name: Run hlint
        id: hlint
        run: make lint
  format:
    name: Run code formatter
    runs-on: ubuntu-latest
    needs: [compile]
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive
      - uses: actions/cache@v1
        id: cache-stack
        with:
          path: ~/.stack/
          key: ${{ runner.os }}-stack
      - uses: actions/setup-haskell@v1
        if: steps.cache-stack.outputs.cache-hit != 'true'
      - name: Install Stylish-Haskell
        if: steps.cache-stack.outputs.cache-hit != 'true'
        run: stack install stylish-haskell
      - name: Run stylish-haskell
        id: stylish-haskell
        run: make format

