{
	"Integer": {
		"lexeme": "@int",
		"tokenValue": "((read t) :: Integer)",
		"comment": "An integral literal",
		"extraFields": "intVal :: Integer",
		"showExtraFields": "c",
		"showBody": "show c",
		"precendence": 2
	},
	"Bool": {
		"lexeme": "@bool",
		"tokenValue": "(if t == \"true\" then True else False)",
		"comment": "A boolean literal",
		"extraFields": "isTrue :: Bool",
		"showExtraFields": "b",
		"showBody": "show b"
	},
	"Real": {
		"lexeme": "@real",
		"tokenValue": "((read t) :: Double)",
		"comment": "A real/floating-point literal",
		"extraFields": "realVal :: Double",
		"showExtraFields": "r",
		"showBody": "show r"
	},
	"String": {
		"lexeme": "@string",
		"tokenValue": "(init $ tail t)",
		"comment": "A string literal",
		"extraFields": "stringVal :: String",
		"showExtraFields": "s",
		"showBody": "show s"
	},
	"BoolT": {
		"lexeme": "bool"
	},
	"ByteT": {
		"lexeme": "byte"
	},
	"ShortT": {
		"lexeme": "short"
	},
	"IntT": {
		"lexeme": "int"
	},
	"LongT": {
		"lexeme": "long"
	},
	"FloatT": {
		"lexeme": "float"
	},
	"RealT": {
		"lexeme": "double"
	},
	"StringT": {
		"lexeme": "string"
	},
	"RangeT": {
		"lexeme": "range"
	},
	"Return": {
		"lexeme": "return"
	},
	"If": {
		"lexeme": "if"
	},
	"Else": {
		"lexeme": "else"
	},
	"While": {
		"lexeme": "while"
	},
	"Repeat": {
		"lexeme": "repeat"
	},
	"Case": {
		"lexeme": "case"
	},
	"For": {
		"lexeme": "for"
	},
	"In": {
		"lexeme": "in"
	},
	"Colon": {
		"lexeme": ":"
	},
	"Dot": {
		"lexeme": "."
	},
	"Ident": {
		"lexeme": "@ident",
		"tokenValue": "t",
		"comment": "An identifier",
		"extraFields": "identifierVal :: String",
		"showExtraFields": "s",
		"showBody": "s"
	},
	"ListCont": {
		"lexeme": "..."
	},
	"Range": {
		"lexeme": ".."
	},
	"NBTMove": {
		"lexeme": "<-"
	},
	"Swap": {
		"lexeme": "><"
	},
	"Gets": {
		"lexeme": "="
	},
	"Comma": {
		"lexeme": ","
	},
	"ForwardSlash": {
		"lexeme": "/"
	},
	"Command": {
		"lexeme": "//",
		"beginState": "command"
	},
	"LParenth": {
		"lexeme": "("
	},
	"RParenth": {
		"lexeme": ")"
	},
	"LBracket": {
		"lexeme": "["
	},
	"RBracket": {
		"lexeme": "]"
	},
	"LAngle": {
		"lexeme": "<"
	},
	"RAngle": {
		"lexeme": ">"
	},
	"SeqStart": {
		"lexeme": "|>"
	},
	"Constant": {
		"lexeme": "$"
	},
	"Pure": {
		"lexeme": "~"
	},
	"CommandPart": {
		"lexeme": "@commandPart",
		"tokenValue": "t",
		"comment": "A part of a command",
		"extraFields": "commandPartVal :: String",
		"showExtraFields": "c",
		"showBody": "c",
		"state": "command"
	},
	"PartSeparator": {
		"lexeme": "@partSeparator",
		"literal": ";"
	},
	"CommandTerminator": {
		"lexeme": "@newline",
		"literal": "\\\\n",
		"state": "command",
		"beginState": "0"
	},
	"BlockSeparator": {
		"lexeme": "@blockSeparator",
		"literal": "}"
	},
	"BlockStarter": {
		"lexeme": "@blockStarter",
		"literal": "{"
	},
	"LineComment": {
		"lexeme": "@lineComment",
		"literal": "--"
	},
	"Plus": {
		"lexeme": "+"
	},
	"Minus": {
		"lexeme": "-"
	},
	"Modulo": {
		"lexeme": "%"
	},
	"Times": {
		"lexeme": "*"
	},
	"And": {
		"lexeme": "&"
	},
	"Or": {
		"lexeme": "|"
	},
	"Not": {
		"lexeme": "!"
	},
	"Max": {
		"lexeme": "/\\\\"
	},
	"Min": {
		"lexeme": "\\\\/"
	},
	"LessThanOrEqual": {
		"lexeme": "<="
	},
	"GreaterThanOrEqual": {
		"lexeme": ">="
	},
	"Equal": {
		"lexeme": "=="
	},
	"NotEqual": {
		"lexeme": "!="
	}
}
